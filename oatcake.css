@layer oatcake {
  @layer reset, base, elements;

  :root {
    --ok-border-radius: 7px;
    --ok-color-bg-2: rgb(248, 249, 250);
    --ok-color-bg-3: rgba(175, 184, 193, 0.2);
    --ok-color-bg: white;
    --ok-color-border: #dee2e6;
    --ok-color-fg-2: rgb(111, 110, 105);
    --ok-color-fg-3: rgb(183, 181, 172);
    --ok-color-fg: rgb(16, 15, 15);
    --ok-color-highlight-bg: LemonChiffon;
    --ok-color-kbd-bg: #fafbfc;
    --ok-color-kbd-border-bottom: rgb(68, 77, 86);
    --ok-color-link-fg: rgb(115, 94, 181);
    --ok-color-link-visited-fg: rgb(79, 54, 133);
    --ok-font-family-mono:
      ui-monospace, "Cascadia Code", "Source Code Pro", Menlo, Consolas,
      "DejaVu Sans Mono", monospace; /* This is the Monospace Code font stack from https://modernfontstacks.com/ */
    --ok-font-family:
      system-ui, sans-serif; /* This is the System UI font stack from https://modernfontstacks.com/ */
    --ok-font-size-small: 13px;
    --ok-font-size: 16px;
    --ok-line-height: 24px; /* The line-height sets the vertical rhythm. All sizes, margins, paddings, and borders must be added in multiples of this line height. */
  }

  @layer reset {
    /* http://meyerweb.com/eric/tools/css/reset/, v2.0 | 20110126, License: none (public domain) */
    a,
    abbr,
    acronym,
    address,
    applet,
    article,
    aside,
    audio,
    b,
    big,
    blockquote,
    body,
    canvas,
    caption,
    center,
    cite,
    code,
    dd,
    del,
    details,
    dfn,
    div,
    dl,
    dt,
    em,
    embed,
    fieldset,
    figcaption,
    figure,
    footer,
    form,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    header,
    hgroup,
    hr,
    html,
    i,
    iframe,
    img,
    ins,
    kbd,
    label,
    legend,
    li,
    mark,
    menu,
    nav,
    object,
    ol,
    output,
    p,
    pre,
    q,
    ruby,
    s,
    samp,
    section,
    small,
    span,
    strike,
    strong,
    sub,
    summary,
    sup,
    table,
    tbody,
    td,
    tfoot,
    th,
    thead,
    time,
    tr,
    tt,
    u,
    ul,
    var,
    video {
      border: 0;
      font: inherit;
      margin: 0;
      padding: 0;
      vertical-align: baseline;
    }

    /* HTML5 display-role reset for older browsers */
    article,
    aside,
    details,
    figcaption,
    figure,
    footer,
    header,
    hgroup,
    menu,
    nav,
    section {
      display: block;
    }
  }

  /* Fonts, font-sizes and vertical rhythm (line-heights, margins and padding). */
  @layer base {
    body {
      font-family: var(--ok-font-family);
      font-size: var(--ok-font-size);
      line-height: var(--ok-line-height);
    }

    .note,
    blockquote,
    details,
    dl,
    figure,
    ol,
    p,
    pre,
    ul {
      margin-bottom: var(--ok-line-height);
    }

    /* Nested lists fix. */
    li dl:not(p ~ dl),
    li ol:not(p ~ ol),
    li ul:not(p ~ ul) {
      margin-bottom: 0;
    }

    /* Fix for list item bullets messing up the vertical rhythm. */
    ul > li {
      list-style-type: "•";
      margin-left: 18px;
      padding-inline-start: 1ch;
    }

    /* Some elements need a bit more breathing space above and below or they feel cramped. */
    audio:not(li audio:first-child),
    iframe:not(li iframe:first-child),
    img:not(li img:first-child),
    svg:not(li svg:first-child),
    video:not(li video:first-child) {
      margin-top: calc(2 * var(--ok-line-height));
    }
    audio,
    iframe,
    img,
    svg,
    video {
      margin-bottom: calc(var(--ok-line-height) * 2);
    }
  }

  /* Base colors. */
  @layer base {
    body {
      background-color: var(--ok-color-bg);
      color: var(--ok-color-fg);
    }
  }

  /* Preventing horizontal overflows. */
  @layer base {
    /* If a single unbroken string (e.g. a URL) is too long to fit on one line then
     * break it across lines rather than letting it overflow. */
    body {
      overflow-wrap: break-word;
    }

    /* Don't break long words in <pre>'s: they have horizontal scrollbars instead. */
    pre {
      overflow-wrap: normal;
    }

    /* Prevent line wrapping within certain elements. This does mean that if you
     * put really long text in one of these it will overflow. */
    .badge,
    .nowrap,
    h1 b,
    h1 code,
    h1 samp,
    h1 strong,
    h2 b,
    h2 code,
    h2 samp,
    h2 strong,
    h3 b,
    h3 code,
    h3 samp,
    h3 strong,
    h4 b,
    h4 code,
    h4 samp,
    h4 strong,
    h5 b,
    h5 code,
    h5 samp,
    h5 strong,
    h6 b,
    h6 code,
    h6 samp,
    h6 strong,
    kbd {
      white-space: nowrap;
    }
  }

  /* Links. */
  @layer elements {
    a {
      color: var(--ok-color-link-fg);
    }
    a:hover,
    a:visited {
      color: var(--ok-color-link-visited-fg);
    }
  }

  /* Bold and italics. */
  @layer elements {
    em,
    i {
      font-style: italic;
    }

    b,
    strong {
      font-weight: bold;
    }
  }

  /* Highlights (the <mark> element). */
  @layer elements {
    mark {
      background-color: var(--ok-color-highlight-bg);
    }
  }

  /* Abbreviations. */
  @layer elements {
    abbr[title] {
      cursor: help;
      text-decoration-skip-ink: none;
      text-decoration: underline dotted;
    }
  }

  /* Media (images, video, audio, iframes). */
  @layer elements {
    audio,
    iframe,
    img,
    svg,
    video {
      border-radius: var(--ok-border-radius);
      display: block;
      margin-left: auto;
      margin-right: auto;
      max-width: 100%;
    }

    audio {
      height: calc(2 * var(--ok-line-height));
      width: 100%;
    }

    /* Add the CSS class "border" to put a border around your iframe, image or video. */
    iframe.border,
    img.border,
    video.border {
      border-radius: var(--ok-border-radius);
      border: 1px solid var(--ok-color-border);
      margin-bottom: calc(
        var(--ok-line-height) * 2 - 2px
      ); /* Prevent the border from offsetting the vertical rhythm. */
    }
  }

  /* Horizontal rules. */
  @layer elements {
    hr {
      background: transparent;
      border: 0;
      border-top: 1px solid var(--ok-color-border);
      margin-bottom: calc(
        var(--ok-line-height) - 1px
      ); /* Fix the vertical rhythm breakage introduced by the border-top. */
    }
  }

  /* Subscript and superscript. */
  @layer elements {
    sub,
    sup {
      font-size: var(--ok-font-size-small);
      line-height: 0;
      padding-left: 0.1em;
      position: relative;
      vertical-align: baseline;
    }

    sub {
      top: 0.4em;
    }

    sup {
      top: -0.4em;
    }
  }

  /* Small text. */
  @layer elements {
    .small,
    small {
      font-size: var(--ok-font-size-small);
      vertical-align: bottom; /* Prevent <small>'s from throwing off the vertical rhythm. */
    }
  }

  /* <var>. */
  @layer elements {
    var {
      font-style: italic;
    }
  }

  /* Secondary text. */
  @layer elements {
    .secondary a,
    .secondary b,
    .secondary code,
    .secondary mark,
    .secondary samp,
    .secondary strong,
    .secondary {
      background-color: inherit;
      color: var(--ok-color-fg-2);
    }

    .faint {
      color: var(--ok-color-fg-3);
    }
  }

  /* <kbd> */
  @layer elements {
    kbd {
      background-color: var(--ok-color-kbd-bg);
      border-radius: 5px;
      border: 1px solid var(--ok-color-border);
      border-bottom-color: var(--ok-color-kbd-border-bottom);
      font-family: var(--ok-font-family-mono);
      font-size: 12px;
      font-weight: bold;
      padding-bottom: 3px;
      padding-left: 5px;
      padding-right: 5px;
      padding-top: 3px;
      vertical-align: top;
    }

    /* Don't attempt to show nesting of <kbd>'s within <kbd>'s. */
    kbd kbd {
      border: none;
      padding: 0;
    }
  }

  /* Inline quotes (<q>). */
  @layer elements {
    q {
      quotes: "“" "”" "‘" "’";
    }

    q:before {
      content: open-quote;
    }

    q:after {
      content: close-quote;
    }
  }

  /* Block quotes. */
  @layer elements {
    blockquote {
      border-left: 2px solid var(--ok-color-border);
      padding-left: 20px;
      quotes: none;
    }

    blockquote:before,
    blockquote:after {
      content: "";
      content: none;
    }

    blockquote blockquote,
    li blockquote {
      margin-left: 3px;
    }

    blockquote > *:last-child {
      margin-bottom: 0;
    }
  }

  /* Lists. */
  @layer elements {
    ol li {
      margin-left: 30px;
    }
  }

  /* Description lists. */
  @layer elements {
    dl {
      padding-left: 20px;
    }

    dt {
      font-weight: bold;
    }

    /* We don't generally want a blank line between two <dd>'s that belong to the
     * same <dt>, but we *do* want a blank line after the final <dd> before the
     * next <dt>. */
    dd + dt {
      margin-top: var(--ok-line-height);
    }
  }

  /* Lead paragraphs. */
  @layer elements {
    .lead {
      font-size: 19px; /* The same size as an <h2> heading, so lead paragraphs can be used as subheadings for <h1>'s or <h2>'s. */
    }

    .lead code,
    .lead samp {
      font-size: 0.8em;
    }

    .lead kbd {
      font-size: 0.75em;
      padding-bottom: 1px;
      padding-top: 1px;
    }
  }

  /* Headings. */
  @layer elements {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-weight: bold;
      line-height: var(--ok-line-height);
    }

    h1 {
      font-size: 24px;
      padding-bottom: var(--ok-line-height);
      padding-top: calc(var(--ok-line-height) * 2);
    }

    h2 {
      font-size: 19px;
      padding-bottom: var(--ok-line-height);
      padding-top: var(--ok-line-height);
    }

    h3 {
      font-size: var(--ok-font-size);
      padding-bottom: var(--ok-line-height);
      padding-top: var(--ok-line-height);
    }

    h4,
    h5,
    h6 {
      font-size: var(--ok-font-size);
      padding-bottom: 0;
      padding-top: 0;
    }

    /* Put one line of vertical space between <h4>'s, <h5>'s and <h6>'s that
     * immediately follow each other.
     * (Normally an <h4>, <h5> or <h6> doesn't have any vertical space below it
     * before the following <p> or other element.) */
    h4 + h4,
    h4 + h5,
    h4 + h6,
    h5 + h4,
    h5 + h5,
    h5 + h6,
    h6 + h4,
    h6 + h5,
    h6 + h6 {
      margin-top: var(--ok-line-height);
    }

    /* At lot of the time you don't want any padding-top before a heading, for
       example when the heading is the first child element of something like a
       blockquote, note, or disclosure widget, or when the heading immediately
       follows another heading. */
    .note h1:first-child,
    .note h2:first-child,
    .note h3:first-child,
    .note h4:first-child,
    .note h5:first-child,
    .note h6:first-child,
    blockquote h1:first-child,
    blockquote h2:first-child,
    blockquote h3:first-child,
    details h1:first-child,
    details h2:first-child,
    details h3:first-child,
    details h4:first-child,
    details h5:first-child,
    details h6:first-child,
    details summary + h1,
    details summary + h2,
    details summary + h3,
    details summary + h4,
    details summary + h5,
    details summary + h6,
    h1 + h1,
    h1 + h2,
    h1 + h3,
    h1 + h4,
    h1 + h5,
    h1 + h6,
    h2 + h1,
    h2 + h2,
    h2 + h3,
    h2 + h4,
    h2 + h5,
    h2 + h6,
    h3 + h1,
    h3 + h2,
    h3 + h3,
    h3 + h4,
    h3 + h5,
    h3 + h6,
    h4 + h1,
    h4 + h2,
    h4 + h3,
    h4 + h4,
    h4 + h5,
    h4 + h6,
    h5 + h1,
    h5 + h2,
    h5 + h3,
    h5 + h4,
    h5 + h5,
    h5 + h6,
    h6 + h1,
    h6 + h2,
    h6 + h3,
    h6 + h4,
    h6 + h5,
    h6 + h6 {
      padding-top: 0;
    }

    /* Remove the background from code elements in headings. */
    h1 code,
    h1 samp,
    h2 code,
    h2 samp,
    h3 code,
    h3 samp,
    h4 code,
    h4 samp,
    h5 code,
    h5 samp,
    h6 code,
    h6 samp {
      background-color: inherit;
      padding: 0;
    }

    /* Surround <code> elements in headings with back-ticks to make them a bit more
       noticeable (the font change alone can be quite subtle). */
    h1 code::after,
    h1 code::before,
    h1 samp::after,
    h1 samp::before,
    h2 code::after,
    h2 code::before,
    h2 samp::after,
    h2 samp::before,
    h3 code::after,
    h3 code::before,
    h3 samp::after,
    h3 samp::before,
    h4 code::after,
    h4 code::before,
    h4 samp::after,
    h4 samp::before,
    h5 code::after,
    h5 code::before,
    h5 samp::after,
    h5 samp::before,
    h6 code::after,
    h6 code::before,
    h6 samp::after,
    h6 samp::before {
      content: "`";
      display: inline-block; /* This prevents link underlines from going under the ::before and ::after content. */
    }

    /* Surround <b> and <strong> elements in headings with stars (they would be
       invisible otherwise since headings are already bold). */
    h1 b::after,
    h1 b::before,
    h1 strong::after,
    h1 strong::before,
    h2 b::after,
    h2 b::before,
    h2 strong::after,
    h2 strong::before,
    h3 b::after,
    h3 b::before,
    h3 strong::after,
    h3 strong::before,
    h4 b::after,
    h4 b::before,
    h4 strong::after,
    h4 strong::before,
    h5 b::after,
    h5 b::before,
    h5 strong::after,
    h5 strong::before,
    h6 b::after,
    h6 b::before,
    h6 strong::after,
    h6 strong::before {
      content: "*";
      display: inline-block; /* This prevents link underlines from going under the ::before and ::after content. */
    }

    /* I've no idea why but when I reduce the font-size of `<mark>`'s within
     * headings and lead paragraphs it offsets the vertical-rhythm unless I say
     * `line-height: 100%;`.
     * You'd think it'd mean the same thing but `line-height: var(--ok-line-height);`
     * doesn't fix the rhtyhm.
     * This doesn't seem to be necessary when reducing the font-sizes of other
     * elements like <code>'s and <samp>'s in headings and lead paragraphs. */
    .lead mark,
    h1 mark,
    h2 mark {
      font-size: 0.8em;
      line-height: 100%;
    }

    h1 kbd,
    h2 kbd {
      font-size: 0.85em;
      padding-bottom: 0;
      padding-top: 0;
    }

    h3 kbd,
    h4 kbd,
    h5 kbd,
    h6 kbd {
      font-size: inherit;
      padding-bottom: 0;
      padding-top: 0;
    }
  }

  /* Figures and captions. */
  @layer elements {
    figure figcaption {
      color: var(--ok-color-fg-2);
      text-align: center;
    }

    /* Images, videos, iframe and audio normally have two lines of bottom margin
       but we only want one line of margin between an image, video, iframe or
       audio in a figure and the <figcaption> that follows it. Achieve this by
       applying a negative margin to the <figcaption> element. */
    figure audio + figcaption,
    figure iframe + figcaption,
    figure img + figcaption,
    figure svg + figcaption,
    figure video + figcaption {
      margin-top: calc(var(--ok-line-height) * -1);
    }

    /* If a figure has a caption then make the vertical space below the caption
       be larger than the vertical space above the caption. This is to put the
       caption visibly closer to the figure that it belongs to than to whatever
       follows the figure. */
    figcaption {
      padding-bottom: var(--ok-line-height);
    }
  }

  /* Code and sample output. */
  @layer elements {
    code,
    samp {
      background-color: var(--ok-color-bg-3);
      border-radius: 5px;
      font-family: var(--ok-font-family-mono);
      line-height: 18px;
      padding-left: 5px;
      padding-right: 5px;
    }

    mark code,
    mark samp {
      background-color: inherit;
      padding: 0;
    }

    .small code,
    .small samp,
    small code,
    small samp,
    sub code,
    sub samp,
    sup code,
    sup samp {
      line-height: inherit;
    }

    .faint code,
    .faint samp,
    .muted code,
    .muted samp {
      background-color: inherit;
    }

    kbd code,
    kbd samp {
      background-color: inherit;
      line-height: inherit;
      padding: 0;
    }
  }

  /* Disclosure widgets. */
  @layer elements {
    details,
    details > summary {
      border-radius: var(--ok-border-radius);
      border: 1px solid var(--ok-color-border);
      padding-bottom: var(--ok-line-height);
      padding-left: calc(0.5 * var(--ok-line-height));
      padding-right: calc(0.5 * var(--ok-line-height));
      padding-top: var(--ok-line-height);
    }

    details {
      /* Avoid breaking the vertical rhythm by subtracting 2px of vertical space to
         account for the 2px of borders around <details> elements
         (1px top and 1px bottom). */
      margin-top: -2px;
    }

    details > summary {
      background-color: var(--ok-color-bg-2);
      cursor: pointer;
      margin-left: calc(-0.5 * var(--ok-line-height) - 1px);
      margin-right: calc(-0.5 * var(--ok-line-height) - 1px);
      margin-top: calc(-1 * calc(var(--ok-line-height)) - 1px);
    }

    /* Give long text in <summary>'s a horizontal scrollbar instead of letting it overflow. */
    details > summary {
      overflow: auto;
      white-space: nowrap;
    }

    details:not([open]) > summary {
      /* Align the <summary>'s bottom border with the bottom border of the containing <details>. */
      margin-bottom: -1px;
    }

    details[open] > summary {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
      border-bottom: none;
      margin-bottom: var(--ok-line-height);
    }

    details:not(:has(> summary)) {
      background-color: var(--ok-color-bg-2);
    }

    details[open]:not(:has(> summary)) *:first-child {
      /* When a details has no <summary> put some whitespace between the top of the
         <details> and the first child-element within.
         Unfortunately this only works if the <details> contents is made up of child
         elements (e.g. <p>'s) rather than just text content. */
      margin-top: var(--ok-line-height);
    }

    details:not([open]):has(> summary) {
      /* A closed <details> with a <summary> doesn't need any padding bottom because
         the <summary> has padding bottom. */
      padding-bottom: 0;
    }

    details[open]:has(> :not(summary)) {
      /* An open <details> with any non-<summary> child elements doesn't need any
       padding bottom because it's assumed that the last child element inside
       the <details> will have its own padding-bottom or margin-bottom. */
      padding-bottom: 0;
    }

    /* Fix headings in summaries. */
    details > summary h1,
    details > summary h2,
    details > summary h3,
    details > summary h4,
    details > summary h5,
    details > summary h6 {
      display: inline-block;
      padding: 0;
    }

    details > summary:has(h1) {
      /* I have no idea why but the contents of <summary> elements that contain
         <h1>'s are ending up 27px high even though the heading is only 24px high.
         Correct it by removing 3px from the <summary>'s padding-bottom. This seems
         to work across browsers. */
      padding-bottom: calc(var(--ok-line-height) - 3px);
    }

    details > summary:has(h2) {
      /* I have no idea why but the contents of <summary> elements that contain
         <h2>'s are ending up 25px high even though the heading is only 24px high.
         Correct it by removing 1px from the <summary>'s padding-bottom. This seems
         to work across browsers. */
      padding-bottom: calc(var(--ok-line-height) - 1px);
    }
  }

  /* Preformatted text blocks (including multiline code and sample output blocks). */
  @layer elements {
    pre {
      border-radius: var(--ok-border-radius);
      border: 1px solid var(--ok-color-border);
      overflow: auto;
      padding-bottom: calc(var(--ok-line-height) - 2px);
      padding-left: calc(0.5 * var(--ok-line-height));
      padding-right: calc(0.5 * var(--ok-line-height));
      padding-top: var(--ok-line-height);
    }

    pre,
    pre code,
    pre samp {
      background-color: var(--ok-color-bg-2);
    }

    pre code,
    pre samp {
      padding: 0;
      white-space: pre;
    }
  }

  /* Badges. */
  @layer elements {
    .badge {
      background-color: var(--ok-color-fg);
      border-radius: 10rem;
      font-weight: 700;
      margin-bottom: -0.3rem; /* Prevent badges from offsetting the vertical rhythm in iOS Safari. */
      padding-bottom: 0.1rem;
      padding-left: 0.6em;
      padding-right: 0.6em;
      padding-top: 0.1rem;
      text-align: center;
      transition:
        background-color 0.15s ease-in-out,
        border-color 0.15s ease-in-out,
        box-shadow 0.15s ease-in-out,
        color 0.15s ease-in-out;
      vertical-align: baseline;
    }

    .badge,
    .badge code,
    .badge samp {
      font-size: var(--ok-font-size-small);
      line-height: 1;
    }

    .badge code,
    .badge samp {
      background-color: inherit;
      padding: 0;
    }

    button.badge {
      border-width: 0;
      cursor: pointer;
      line-height: normal;
    }

    .badge,
    a.badge,
    a.badge:focus,
    a.badge:hover {
      color: var(--ok-color-bg);
    }

    a.badge,
    a.badge:focus,
    a.badge:hover {
      border-bottom: none;
      text-decoration: none;
    }

    a.badge:focus,
    button.badge:focus {
      outline: 0;
    }

    a.badge:focus,
    button.badge:focus {
      box-shadow: 0 0 0 0.2rem var(--ok-color-link-fg);
    }
  }

  /* Note boxes. */
  @layer elements {
    .note {
      background-color: var(--ok-color-bg-2);
      border-radius: var(--ok-border-radius);
      border: 1px solid var(--ok-color-border);
      padding-bottom: calc(var(--ok-line-height) - 2px);
      padding-left: calc(var(--ok-line-height) * 0.5);
      padding-right: calc(var(--ok-line-height) * 0.5);
      padding-top: var(--ok-line-height);
    }

    .note > *:last-child {
      margin-bottom: 0;
    }

    .note > h1:last-child,
    .note > h2:last-child,
    .note > h3:last-child {
      padding-bottom: 0;
    }
  }
}
